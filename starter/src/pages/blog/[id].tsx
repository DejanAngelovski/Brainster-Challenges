import type { GetStaticPaths, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { BlogItemType } from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import RelatedBlogs, { RelatedBlogsType } from "../../components/RelatedBlogs";

interface Props {
  blog: BlogItemType
  random: RelatedBlogsType[]
}

const BlogDetail: NextPage<Props> = ({ blog, random }) => {
  const { author, category, excerpt, id, img, title, date, first_content, second_content } = blog
  return (
    <>
      <Head>
        <title>Store - title</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={title} />

      <section className="bg0 p-t-52 p-b-20">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                <div className="wrap-pic-w how-pos5-parent">
                  <img src={img} alt="IMG-BLOG" />
                </div>

                <div className="p-t-32">
                  <span className="flex-w align-items-center flex-m stext-111 cl2 p-b-19">
                    <span className="flex-c-m mr-3 bor7 p-lr-15 trans-04">{category}</span>

                    <span>
                      <span className="cl4">By</span> {author}
                      <span className="cl12 m-l-4 m-r-6">|</span>
                    </span>

                    <span>{date}</span>
                  </span>

                  <h4 className="ltext-109 cl2 p-b-28">{title}</h4>

                  <p className="stext-117 cl6 p-b-26">{first_content}</p>

                  <p className="stext-117 cl6 p-b-26">{second_content}</p>
                </div>
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <RelatedBlogs data={random} />
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};
export const getStaticPaths: GetStaticPaths = async () => {
  const res = await fetch("https://jolly-cute-centaur.glitch.me/blogs");
  const courses: BlogItemType[] = await res.json();

  const paths = courses.map(c => ({
    params: {
      id: c.id,
    },
  }));

  return {
    paths,
    fallback: false,
  };
};


export const getStaticProps: GetStaticProps = async ({ params }) => {
  if (params) {
    const res = await fetch(`https://jolly-cute-centaur.glitch.me/blogs/${params.id}`);
    const blog = await res.json();

    const resAllblog = await fetch(`https://jolly-cute-centaur.glitch.me/blogs`);
    const Allblog: BlogItemType[] = await resAllblog.json();

    const randomNo = Math.floor(Math.random() * (Allblog.length - 3));
    const randomRes = await fetch(`https://jolly-cute-centaur.glitch.me/blogs?_start=${randomNo}&_limit=3`);
    const random = await randomRes.json();

    return {
      props: {
        blog,
        random,
      },
    };
  }

  return { props: {} };
};


export default BlogDetail;